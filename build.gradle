buildscript {
    ext.kotlinVersion = "1.5.21"

    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}


def commonScriptsFile = new File(new File(project.gradle.gradleUserHomeDir, "scripts"), "commonScripts.gradle")
if (commonScriptsFile.exists()) {
    apply from: commonScriptsFile
}


ext.sourceCodeRepositoryBaseUrl = "https://github.com/codinux-gmbh/ElasticsearchLogger"

ext.useNewSonatypeRepo = true
ext.packageGroup = "net.codinux"

ext.developerId = "codinux"
ext.developerName = "codinux GmbH & Co. KG"
ext.developerMail = "git@codinux.net"

ext.licenseName = "The Apache License, Version 2.0"
ext.licenseUrl = "http://www.apache.org/licenses/LICENSE-2.0.txt"

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url = "https://s01.oss.sonatype.org/content/repositories/snapshots" }
    }

    group "net.codinux.log"
    version "2.5.0-SNAPSHOT"

}



task jarAll {
    dependsOn = [
            "ElasticsearchLoggerBase:jar",
            "JavaUtilLoggingElasticsearchLogger:jar",
            "JBossLoggingElasticsearchLogger:jar"
    ]
}


task publishAll {
    dependsOn = [
            "ElasticsearchLoggerBase:publish",
            "JavaUtilLoggingElasticsearchLogger:publish",
            "JBossLoggingElasticsearchLogger:publish",
            "LogbackElasticsearchLogger:publish"
    ]
}

task publishAllToMavenLocal {
    dependsOn = [
            "ElasticsearchLoggerBase:publishToMavenLocal",
            "JavaUtilLoggingElasticsearchLogger:publishToMavenLocal",
            "JBossLoggingElasticsearchLogger:publishToMavenLocal",
            "LogbackElasticsearchLogger:publishToMavenLocal"
    ]
}